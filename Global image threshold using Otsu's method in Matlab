clc; clear; close all;
%% Global image threshold using Otsu's method in Matlab

I = imread('Cells.tif');
figure(1);
imshow(I)
title('orignal image');

figure(2);
imhist(I);
title('the histogram of image');

[y,x] = imhist(I);
[m,n] = size(I);
yn = y/(m*n);

[my,ny] = size(y);
nz = find(y~=0);                           %find the nonzero values of y
t = zeros(256,1);
for k = (min(nz)-1):(max(nz)-1)            %the possible thresholds are from the minimum of nonzero values of y to the maximum of nonzero values of y 
 
    p1 = sum(yn(min(nz):(k+1),:));         
    p2 = 1 - p1;
    
    a1 = 0;
   for i = (min(nz)-1):k
    a1 = a1 + i*y(i+1,1);
   end
   m1 = a1/sum(y(min(nz):k+1,:));        %caculate the background means (<=threshold)
   
   
   if k<(max(nz)-1)
    a2 = 0;
   for j = k+1:(max(nz))
    a2 = a2 + j*y(j+1,1);
   end   
  
   m2 = a2/sum(y(k+2:max(nz),:));        %caculate the foreground means (>threshold)
   else
       m2 =0;
   end
   
   
    thetab2 = p1*p2*((m1-m2)^2);         %caculate the between-class variance
    t(k+1) = thetab2;
end

kopt = find(t(:,1)==max(t))-1;           %find the largest between-class variance


I(I<=kopt)=0;
I(I>kopt)=255;
figure(3);
imshow(I)
title('result using Otsu method');
